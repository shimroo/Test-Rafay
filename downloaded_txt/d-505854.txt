debug( $mosconfig_debug );
$acl = new gacl_api();

// akede, 2004-12-10: added language management based on session information
if ($mosconfig_mbf_content) {
	$mosconfig_defaultlang = $mosconfig_lang;		// save the default language of the site
	$iso_client_lang = mambelfish::discoverlanguage( $database );
	$_mambelfish_manager = new mambelfishmanager();
}
// end: akede


if ($option == '') {
	if ($itemid) {
		$query = "select id, link"
		. "\n from #__menu"
		. "\n where menutype='mainmenu'"
		. "\n and id = '$itemid'"
		. "\n and published = '1'"
		;
		$database->setquery( $query );
	} else {
		$query = "select id, link"
		. "\n from #__menu"
		. "\n where menutype='mainmenu' and published='1'"
		. "\n order by parent, ordering limit 1"
		;
		$database->setquery( $query );
	}
	$menu = new mosmenu( $database );
	if ($database->loadobject( $menu )) {
		$itemid = $menu->id;
	}
	$link = $menu->link;
	if (($pos = strpos( $link, '?' )) !== false) {
		$link = substr( $link, $pos+1 ). '&itemid='.$itemid;
	}
	parse_str( $link, $temp );
	/** this is a patch, need to rework when globals are handled better */
	foreach ($temp as $k=>$v) {
		$globals[$k] = $v;
		$_request[$k] = $v;
		if ($k == 'option') {
			$option = $v;
		}
	}
}

/** do we have a valid itemid yet?? */
if ( $itemid === null ) {
	/** nope, just use the homepage then. */
	$query = "select id"
	. "\n from #__menu"
	. "\n where menutype='mainmenu'"
	. "\n and published='1'"
	. "\n order by parent, ordering"
	. "\n limit 1"
	;
	$database->setquery( $query );
	$itemid = $database->loadresult();
}

/** patch to lessen the impact on templates */
if ($option == 'search') {
	$option = 'com_search';
}

/** mainframe is an api workhorse, lots of 'core' interaction routines */
$mainframe = new mosmainframe( $database, $option, '.' );
$mainframe->initsession();

// loads english language file by default
if ( $mosconfig_lang == '' ) {
	$mosconfig_lang = 'english';
}
include_once ( 'language/'.$mosconfig_lang.'.php' );

// frontend login & logout controls
$return = mosgetparam( $_request, 'return', null );
$message = mosgetparam( $_post, 'message', 0 );
if ($option == "login") {
	$mainframe->login();

	// js popup message
	if ( $message ) {
		?>
		
logout();

	// js popup message
	if ( $message ) {
		?>
		
getuser();

/** detect first visit */
$mainframe->detect();

$gid = intval( $my->gid );

// gets template for page
$cur_template = $mainframe->gettemplate();
/** temp fix - this feature is currently disabled */

/** @global a places to store information from processing of the component */
$_mos_option = array();

// precapture the output of the component
require_once( $mosconfig_absolute_path . '/editor/editor.php' );

ob_start();
if ($path = $mainframe->getpath( 'front' )) {
	$task = mosgetparam( $_request, 'task', '' );
	$ret = mosmenucheck( $itemid, $option, $task, $gid );
	if ($ret) {
		require_once( $path );
	} else {
		mosnotauth();
	}
} else {
	echo _not_exist;
}
$_mos_option['buffer'] = ob_get_contents();
ob_end_clean();

initgzip();

header( 'expires: mon, 26 jul 1997 05:00:00 gmt' );
header( 'last-modified: ' . gmdate( 'd, d m y h:i:s' ) . ' gmt' );
header( 'cache-control: no-store, no-cache, must-revalidate' );
header( 'cache-control: post-check=0, pre-check=0', false );
header( 'pragma: no-cache' );

// loads template file
if ( !file_exists( 'templates/'. $cur_template .'/index.php' ) ) {
	echo _template_warn . $cur_template;
} else {
	require_once( 'templates/'. $cur_template .'/index.php' );
	echo "";
}

// displays queries performed for page
if ($mosconfig_debug) {
	echo $database->_ticker . ' queries executed';
	echo '';
 	foreach ($database->_log as $k=>$sql) {
 	    echo $k+1 . "\n" . $sql . '';
	}
}

dogzip();
?>
