





















































airlied — livejournal







































































































?

?









































































































































                                    





























































































































































livejournal






find more


communities


rss reader




shop









                                help
                            







                                    search
                                









                                    log in



























log in




                                        join free
                                    

                                        join
                                    







                                          english
                                        
                                        (en)
                                

english (en)

русский (ru)

українська (uk)

français (fr)

português (pt)

español (es)

deutsch (de)

italiano (it)

беларуская (be)













































airlied
—














< no suspend reason >









readability




















                    more
                














airlied







                                archive
                            



                                photos
                            



                                video
                            





readability






























log in


no account?
create an account








































remember me



                                forgot password
                            




                        log in
                        














log in









qr code

























































no account?

                    create an account
                
by logging in to livejournal using a third-party service you accept livejournal's user agreement













                    airlied  :.:..:.
                

airlied

recent entries
archive
friends
profile












page summary7/10/17 04:36 pm  :: migrating to blogsport5/4/17 02:22 pm  :: how much of the conformance test suite does radv pass now?3/20/17 05:26 pm  :: how close to conformant is radv?2/28/17 05:42 am  :: radv + steamvr12/23/16 05:26 pm  :: radv and doom - kinda9/27/16 02:33 pm  :: radv: status update or is talos principle rendering yet?8/26/16 01:05 pm  :: radv: status update or is dota2 working yet?7/20/16 05:59 am  :: radv: initial hacking on a vulkan driver for amd vi gpus2/15/16 12:51 pm  :: virglrenderer project gets mailing-list and hosting3/16/15 04:24 pm  :: virgil3d local rendering test harness









july 2017


 
 
 
 
 
 
1

2
3
4
5
6
7
8

9
10
11
12
13
14
15

16
17
18
19
20
21
22

23
24
25
26
27
28
29

30
31












back
viewing 0 - 10
 






 7/10/17 04:36 pm


  leave a comment     share      flag      link   
 
migrating to blogsport

due to lots of people telling me lj is bad, mm'kay, i've migrated to blogspot.new blog is/will be here: https://airlied.blogspot.com



back to top



 5/4/17 02:22 pm


  leave a comment     share      flag      link   
 
how much of the conformance test suite does radv pass now?

test run totals:  passed:        109293/150992 (72.4%)  failed:        0/150992 (0.0%)  not supported: 41697/150992 (27.6%)  warnings:      2/150992 (0.0%)this is effectively a pass. the not supported stuff isn't missing features as uneducated people are quick to spout, it's more stuff the hardware doesn't support or is pointless to expose on the hardware. (lots of image formats).this is the results from the vulkan cts 1.0.2 branch, against mesa master with one patch (a workaround for some internalerrors that cts throws up).do not call the driver conformant as that is against the khronos rules as we haven't paid or filed for approval, but the driver does now effectively pass the latest conformance test suite. i'll update on things if that changes.thanks again to everyone involved.



back to top



 3/20/17 05:26 pm


  leave a comment     share      flag      link   
 
how close to conformant is radv?

i spent some time staring into the results of the vk-gl-cts test suite on radv, which contains the vulkan 1.0 conformance tests.in order to be conformant you have to pass all the tests on the mustpass list for the vulkan version you want to conform to, from the branch of the test suite for that version.the latest cts tests for 1.0 is the vulkan-cts-1.0.2 branch, and the mustpass list is in external/vulkancts/mustpass/1.0.2/vk-default.txtusing some wip radv patches in my github radv-wip-conform branch and the 1.0.2 test suite, today's results are on my tonga gpu:test run totals:  passed:        82551/150950 (54.7%)  failed:        0/150950 (0.0%)  not supported: 68397/150950 (45.3%)  warnings:      2/150950 (0.0%)that is pretty conformant (in fact it would pass as-is). however i need to clean up the patches in the branch and maybe figure out how to do some bits properly without hacks (particularly some semaphore wait tweaks), but that is most of the work done.thanks again to bas and all other radv contributors.



back to top



 2/28/17 05:42 am


  leave a comment     share      flag      link   
 
radv + steamvr

if anyone wants to run steamvr on top of radv, the code is all public now.https://github.com/airlied/mesa/tree/radv-wip-steamvrthe external memory code will be going upstream to master once i clean it up a bit, the semaphore hack is waiting on kernelchanges, and the nir shader hack is waiting on a new steamvr build that removes the bad use of spir-v.i've run serious sam tfe in vr mode on this branch.



back to top



 12/23/16 05:26 pm


  leave a comment     share      flag      link   
 
radv and doom - kinda

yesterday valve gave me a copy of doom for christmas (not really for christmas), and i got the wine bits in place from fedora, then i spent today trying to get doom to render on radv.thanks to parkerr on #radeon for taking the picture from his machine, i'm too lazy.so it runs kinda, it hangs the gpu a fair bit, it misrenders some colors in some scenes, but you can see most of it. i'm not sure if i'll get back to this before next year (i'll try), but i'm pretty happy to have gotten it this far in a day, though i'm sure the next few things will me much more difficult to debug.the branch is here:https://github.com/airlied/mesa/commits/radv-wip-doom-wine



back to top



 9/27/16 02:33 pm


  leave a comment     3 comments      share      flag      link   
 
radv: status update or is talos principle rendering yet?

the answer is yes!!i fixed the last bug with instance rendering and talos renders great on radv now.also with the semi-interesting branch vkquake also renders, there are some upstream bugs that needs fixing in spirv/nir that i'm awaiting and upstream resolution on, but i've included some prelim fixes in semi-interesting for now, that'll go away when upstream fixes are decided on.here's a screenshot:



back to top



 8/26/16 01:05 pm


  leave a comment     2 comments      share      flag      link   
 
radv: status update or is dota2 working yet?

clickbait titles for the win!first up, massive thanks to my major co-conspirator on radv, bas nieuwenhuizen, for putting in so much effort on getting radv going.so where are we at?well this morning i finally found the last bug that was causing missing rendering on dota 2. we were missing support for a compressed texture format that dota2 used. so currently dota 2 renders, i've no great performance comparison to post yet because my cpu is 5 years old, and can barely get close to 30fps with gl or vulkan. i think we know of a couple of places that could be bottlenecking us on the cpu side. the radv driver is currently missing hyper-z (90% done), fast color clears and dcc, which are all gpu side speedups in theory. also running the phoronix-test-suite dota2 tests works sometimes, hangs in a thread lock sometimes, or crashes sometimes. i think we have some memory corruption somewhere that it collides with.other status bits: the vulkan cts test suite contains 114598 tests, a piglit run a few hours before i fixed dota2 was at:[114598/114598] skip: 50388, pass: 62932, fail: 1193, timeout: 2, crash: 83 -       |/-\so that isn't too bad a showing, we know some missing features are accounting for some of fails. a lot of the crashes are an assert in cts hitting, that i don't think is a real problem.we render most of the sascha willems demos fine.i've tested the talos principle as well, the texture fix renders a lot more stuff on the screen, but we are still seeing large chunks of blackness where i think there should be trees in-game, the menus etc all seem to load fine.all this work is on the semi-interesting branch of https://github.com/airlied/mesait only has been tested on vi amd gpus, polaris worked previously but something derailed it, but we should fix it once we get the finished bisect. cik gpus kinda work with the amdgpu kernel driver loaded. si gpus are nowhere yet.here's a screenshot:



back to top



 7/20/16 05:59 am


  leave a comment     2 comments      share      flag      link   
 
radv: initial hacking on a vulkan driver for amd vi gpus

(email sent to mesa-devel list).i was waiting for an open source driver to appear when i realised i should really just write one myself, some talking with bas later, and we decided to see where we could get.this is the point at which we were willing to show it to others, it's not really a vulkan driver yet, so far it's a vulkan triangle demos driver.it renders the tri and cube demos from the vulkan loader,and the triangle demo from sascha willems demosand the vulkan cts smoke tests (all 4 of them one of which draws a triangle).there is a lot of work to do, and it's at the stage where we are seeing if anyone else wants to join in at the start, before we make too many serious design decisions or take a path we really don't want to.so far it's only been run on tonga and fiji chips i think, we are hoping to support radeon kernel driver for si/cik at some point, but i think we need to get things a bit further on vi chips first.the code is currently here:https://github.com/airlied/mesa/tree/semi-interestingthere is a not-interesting branch which contains all the pre-history which might be useful for someone else bringing up a vulkan driver on other hardware.the code is pretty much based on the intel anv driver, with the winsys ported from gallium driver,and most of the state setup from there. bas wrote the code to connect nir<->llvm ir so we could reuse it in the future for spir-v in gl if required. it also copies amd addrlib over, (this should be shared).also we don't do spir-v->llvm direct. we use nir as it has the best chance for inter shader stage optimisations (vertex/fragment combined) which neither spir-v or llvm handles for us, (nir doesn't do it yet but it can).if you want to submit bug reports, they will only be taken seriously if accompanied by working patches at this stage, and we've no plans to merge to master yet, but open to discussion on when we could do that and what would be required.



back to top



 2/15/16 12:51 pm


  leave a comment     share      flag      link   
 
virglrenderer project gets mailing-list and hosting

just fyi:there is now a mailing list for virglrenderer library hosted at freedesktop. it is to be used for development discussion of the virgl->gl renderer library and for patches to it.https://lists.freedesktop.org/mailman/listinfo/virglrenderer-develthe git tree is also now hosted at:git://anongit.freedesktop.org/git/virglrendererhttps://cgit.freedesktop.org/virglrenderermy personal repo will only be used for my own development stuff.i'll also get a freedesktop patchwork instance set up for this asap.i'm also contemplating bugzilla vs phabricator.dave.



back to top



 3/16/15 04:24 pm


  leave a comment     share      flag      link   
 
virgil3d local rendering test harness

so i've still been working on the virgil3d project along with part time help from marc-andre and gerd at red hat, and we've been making steady progress. this post is about a test harness i just finished developing for adding and debugging gl features.so one of the more annoying issuess with working on virgil has been that while working on adding 3d renderer features or trying to track down a piglit failure, you generally have to run a full vm to do so. this adds a long round trip in your test/development cycle.i'd always had the idea to do some sort of local system renderer, but there are some issues with calling gl from inside a gl driver. so my plan was to have a renderer process which loads the renderer library that qemu loads, and a mesa driver that hooks into the software rasterizer interfaces. so instead of running llvmpipe or softpipe i have a virpipe gallium wrapper, that wraps my virgl driver and the sw state tracker via a new vtest winsys layer for virgl.so the virgl pipe driver sits on top of the new winsys layer, and the new winsys instead of using the linux kernel drm apis just passes the commands over a unix socket to a remote server process.the remote server process then uses egl and the renderer library, forks a new copy for each incoming connection and dies off when the rendering is done.the final rendered result has to be read back over the socket, and then the sw winsys is used to putimage the rendering onto the screen.so this system is probably going to be slower in raw speed terms, but for developing features or debugging fails it should provide an easier route without the overheads of the qemu process. i was pleasantly surprised it only took two days to pull most of this test harness together which was neat, i'd planned much longer for it!the code lives in two halves.http://cgit.freedesktop.org/~airlied/virglrenderer http://cgit.freedesktop.org/~airlied/mesa virgl-mesa-driver[updated: pushed into the main branches]also the virglrenderer repo is standalone now, it also has a bunch of unit tests in it that are run using valgrind also, in an attempt to lock down some more corners of the api and test for possible ways to escape the host.



back to top




back
viewing 0 - 10
 













































