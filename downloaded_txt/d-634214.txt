



robowiki



















main page

from robowiki


jump to navigation
jump to search






welcome to the robowiki
collecting robocode knowledge since 2003.




getting started
documentation


tutorials
terminology






what is robocode?



robocode is a programming game. it can be used to teach or learn programming in java or .net. it can serve as a platform for exploring ai and machine learning techniques. or it can be a competitive, addictive hobby that eats up all your time and cpu cycles.


getting started



robocode docs: download & install, start a battle, my first robot tutorial, faq, and lots more to get your feet wet.
radar, movement, and targeting: the three basic components of any robot.
tutorials: covering a wide range of topics, these tutorials will guide you along the way to your first competitive robot.
terminology: catchphrases around robocode


using the robowiki



we do our best to make the robowiki a great reference for all levels of robocoders. but it's also a strong and long-standing community of passionate and helpful people.
check the recent changes to see current discussion and updates.
please feel free to make pages for yourself and your bots.
ask questions and read up on any of the discussion tabs of each page.
submit your bots to the roborumble
follow @robowiki and @roborumble on twitter.
read guide for articles for tips and tools for writing robowiki articles.
let us know how we can improve the wiki – or contribute to it yourself!






roborumble



roborumble is the primary competition for robocode bots, with divisions for 1v1, melee, teams, and twin duel, and subdivisions for minibots, microbots, and nanobots.
enter the competition
contribute to roborumble
current rankings


challenges



movement challenge 2k7 – the latest mc hands you raiko's gun and tests your performance against basic, intermediate, and scary-good opponents.
targeting challenge rm – the current benchmark of a general purpose robocode gun, this tc puts you up against all random movement bots from the previous tcs.
anti-surfer challenge – it may not help you climb to the top of the roborumble, but we still have fun trying to destroy wave surfers as best we can.
rambot challenge 2k6 – because ramming is fun.
more challenges – there's plenty more where those came from...


external links



robocode website
old robowiki (archive)
robots archive
wikipedia entry for robocode








a few robots worth checking out...



beepboop - the current roborumble champ in general 1v1. pioneered applying gradient descent in both targeting and surfing. learn more in understanding beepboop.
drussgt – had been the roborumble champ in general 1v1 for 13 years. a super strong dynamic clustering gun and one of the only bots using a goto wave surfing movement. and it's open source.
shadow – a former champ in melee, 1v1, and teams, this is one of the toughest bots you'll ever face. abc's shadow has been crushing robocoders with innovative new techniques, like wave surfing and shadow/melee gun, since long before most of us ever found this game.
super sample bots – once you've gotten past the sample bots that come with robocode, step up and test yourself against the super samples.
lunartwins – twin duel is a 2v2 survivalist rule set, and lunartwins has an in-your-face strategy that few teams know how to deal with.
prairiewolf – an ancient multi-mode bot that's bound to give new robocoders a healthy challenge.
basicgfsurfer – the wave surfing tutorial and gftargetingbot provide great starting points for new robocoders. put the two together and you'll find yourself just outside the roborumble top-100.






development tools



roborunner / robojogger – the latest and greatest in batch battle running, these tools make it easy to run loads of battles against your favorite test bed, or to run your bot through a challenge.
eclipse – get robocode setup with eclipse, one of the most popular java ides.
intellij – get robocode setup with intellij, a powerful java ide.
robocode api – not a "tool", per se, but you'll need to get familiar with it!
graphical debugging – using robocode's graphics support to draw on the battlefield can be a huge help in making sure your bot is doing and thinking what you expect it to.
visual studio .net – you can now create .net robocode bots, too.
netbeans – prefer netbeans to eclipse? here's a detailed guide to getting it setup with robocode.
floodgrapher – graphing your bot's movement can offer a lot of insight into where you need to make improvements.
utilities – more tools to make your robocoding easier and more productive.









retrieved from "http://robowiki.net/w/index.php?title=main_page&oldid=57425"





navigation menu


personal tools

create accountlog in 



namespaces

main pagediscussion 




variants







views

readview sourceview history 



more





search



 







navigation


main pagebotsbot authorsrecent changesrandom pagerandom talk pagerandom user pageall pagesall categories 



tools


what links hererelated changesspecial pagesprintable versionpermanent linkpage information 






 this page was last edited on 3 october 2023, at 22:34.
content is available under creative commons attribution-sharealike unless otherwise noted.


privacy policy
about robowiki
disclaimers



 

 






