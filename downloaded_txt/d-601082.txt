


home - ratfactor















hello!
i'm dave gauer. welcome to my website.

about |
    now |
    repos |
    cards |
    contact |
    rss 
    (about the feed)

no pages on this site use javascript unless they have specific functionality
that requires it. no cookies. no trackers or data collection. no third-party
anything.


this website’s
todo list.


2024


webrings:




        xxiivv webring
    


<
geekring
>




see what i’m up to right now! (more or less)


updates to retrov, my virtual-dom js rendering library (repo)


new tool: ratfactor’s sequence timer


the mnt pocket reform arrived at my doorstep!


books finally added a new section to start putting book reviews, etc. on my own site again (that is to say, not on goodreads).


wrapping up 2023, plans for 2024


hiss work in progress! (read the dev log)


snake






2023




(dec) completed the december adventure 2023 - resulting in a pretty great proof-of-concept for "hiss", a game editor that exports stand-alone html/js hyperlink-driven text-based adventure games.


(dec) just finished this epic drawing for eggnog games (will be a t-shirt!)


(nov) i’ve finished meow5 and written my conclusions! (season 2 of assembly nights is done!)


(oct) i made another zig standard library documentation generator! zstd-browse2: repo and results!


(august - october) decided to leave microsoft github (see leaving github) and start self-hosting my own repos on this website. to do that, i created a static repo mini-site generator in ruby called reporat!


done (july): i have finally finished forth: the programming language that writes itself: the web page ("charles h. moore and the pursuit of simplicity."), which is now practically a small book about the evolution
and meaning of the forth programming language.


new website area created: papers, which will house my summaries and opinions about [computer science and programming] papers (first one posted!).


i’ve posted "chapters" 1-4 of my year of the microcontroller!


made a design for my awesome repo collaborator: ziglings maintainer 2023: the shirt


updated chklnks.rb (github.com), my no-dependency ruby website link crawler and checker. it needed better error handling. is it just me, or is the web getting harder to crawl? lots of weird redirects and 400-class errors for links that i can otherwise hit with a browser. i’m guessing it’s anti-bot, anti-scraping?


done march: retrov, my new javascript vdom library because i couldn’t stop myself. no regrets.


feb/march slackware pages additions: how i set up new computers with slackware linux and slackbuilds.org (my new submissions).


done february: my forth talk, forth: the programming language that writes itself (these are just slides - see above for the article i created from these.)


done january: hoo? a solo journaling rpg (browser game with lots of art, made for an itch.io game jam!)


website tooling update: ratlink (used it to make that link just now)


i finished drawing 78 tarot cards! (for hoo? see above)


i made an html presentation slide tool today: minslides.


i declare 2023 to be the year of the microcontroller! (well, for me anyway.)






2022




december: i just finished my book-guided openbsd blog and tour.


december: made a little page for the eee pc 701 because it needs one.


november: i just self-published mr. tree goes down as a real physical children’s book!















november: meow5 and assembly nights: "season two" is full steam ahead!


october: woah! finished nasmjf, my nasm port of jonesforth!


been enjoying slackware 15.0, have started adding more content to my slackware pages.


joined a mastodon instance (mastodon.art)


created a new git + gnu stow home computing setup (now with check-repos script!


have started needle felting because i don’t have enough hobbies.


just edited my sh3 notes and added a u-boat fan page to honor my obsession in the year 2020.


sharing wordle results with old-school cgi "this is what software would be like in a utopia."


after hemming and hawing about it, i’m starting a virtual box of cards for this website


at last! i have written up the my notebook system page! (with pictures!)


still enjoying assembly nights (my nasm jonesforth port, started this in 2021)


still creating a live reference for htmx (with accompanying cgi back-end and forest animals) (2023 update: abandoned)






2021




hacking teardown for my kids. (updated)


am slowly fleshing out an article on the web (now there’s a subject!).


made a hardware task multitimer using a raspberry pi pico microcontroller.


had a little rant about a web design pet peeve.


started a "personal timeline", a general history reference for me, not about me!


dave’s raspberry pi zero luggable (aka "the cardboard computer") was a fun weekend build!


decoding i2c data with an oscilloscope for a little microcontroller project.


this site now has an rss (atom) feed.


learning zig and creating learning resources to help myself and others:



wrote a toy unix shell and wrote an article about it


very slowly writing a ray tracer, a byproduct of which is writing tga files (source)





finally created a css flexbox basics guide.


got deep into asciidoc because i’m invested in it (almost everything i write is in .adoc files)


re-learning midnight commander and orthodox file managers in general because they’re so danged productive.


windows subsystem for linux (wsl) kind of changes everything.


managing a family minecraft server which can be fun.






2020


this has been a heck of a year on a global scale.  on a personal scale, productivity on projects has come in fits and spurts.




pkgblog (slackware package blog):



cpufrequtils - get your freq on!


cpio - file archiver with some handy abilities


gnu coreutils - finally done! a colossal review of the entire coreutils package





keeb’s quest - new - i’m embarking on developing a typing game. hoping to make regular updates here.


notes on silent hunter iii - i’ve given this simulation game a third real attempt - here’s how i’ve learned to cope with it.


syncthing - i’ve been using syncthing for about a year (?) now and it’s been a good experience. i’m starting to collect my notes.


chklnks.rb - i wrote a recursive web crawler and link checker in ruby just to make sure the website conversion was successful!




this website has gotten a complete redo - it’s still authored as asciidoc, but i wrote a new static site generator to publish it.




my personal wiki setup - livin' the dream: one local wiki, running inside a text editor, as the single browsable start point for all of my notes and content.


vviki - the vim plugin i wrote to edit the above wiki.


my note-taking system is in a messy transition phase right now. but i think it’s all heading in the right direction. watch this space for a write-up that is nine (and counting) years in the making.


new static site generator - a little ruby wiki-to-website publishing tool has now replaced hugo. (i touch upon this in the above personal wiki article, but it probably deserves its own page at some point.)


rediscovery of ruby - returning to a previous stop on the eternal quest for the one true utility language.


another shot at learning rust - the more i try to avoid it, the more convinced i am that rust is doing things correctly.  i’m giving it a go again.  i have some specific projects i’d like to build with it. (update: this is not the hobby language i need right now.)






2019


i moved across the country and started a new job at the end of 2018, putting an end to what was otherwise a great year for this website.
now i’m back at it, mostly with slackware linux content:




pkgblog: bzip2 - compression utility


pkgblog: btrfs-progs - playing with filesystem snapshots!


enabling eth1 - a network note to self


why slackware - why i chose it and stick with it


mounty - cli/tui menu-based drive mounting


mounting usb drives quickly (already superseded by the above)


slackware pkgblog - new entries starting with the 'bin' package






2018


my ambitious new project, dave’s slackware package blog, has begun!
i’m getting my hands dirty with every slackware package and writing up my experiences.
i also explain how and why i’m doing this:




pkgblog - my slackware package blog




after the switch to hugo, i started writing a ton of new content.
it’s been technically up here on ratfactor.com the whole time, but i was waiting to iron some things out before i linked to them.
so two months later, i’m finally exposing the links to the new content:




configuring alpine


brother hl-l5100dn and slackware linux


dehydrated quickstart


dave’s visual guide to dwm


how i use dwm


better hugo asciidoc html - generating semantic html5 with hugo+asciidoctor


web typography - and why ratfactor.com looks like it does




this has been a big year for the website!
after years of relying on various php template systems (of my own devising) and a static site generator i wrote in nim and then perl, i’ve finally converted (almost) everything to the asciidoc format and am generating the site with hugo.
there is a ton of new content, but a lot of it is in draft form, so i haven’t linked to it yet.
it’s so close, i can almost smell it.


have finally upgraded my main work (as in "day job") project to mithril 1.1.6 (mithril.js.org).
there have been some excellent changes from the old 0.2.x api.
i did have one issue:




scrolling to the top of the page when changing routes




continuing to use ruby as my main "scripting" language.
why did i wait this long to learn it?
probably because i was so tired of the search for the "perfect" language.
i now wish i’d put ruby higher in the queue.  to aid my learning, i wrote an imperfect simulation of the boardgame monopoly junior:




monopoly.rb  bitbucket.org stopped hosting mercurial repos.




have been trying to clear out a huge backlog of software development reading.
created a chronological index of steve yegge’s blog posts:




yegge-dex




my employer agreed to release our learning management system project under an open-source license. i think it’s a pretty great piece of software: single-page application based on mithril.js with "tags" as the core organizational method including boolean operations on tags. the api is "true" rest with browsable json hypermedia (see the 2015 heading below for more about that).




percolate lms (github.com)


tags as alternatives to checkboxes is a blog post i wrote about the design of the system.






2017


this year is ratfactor.com’s 20th anniversary!


learned ruby and re-learned nim at the tail end of the year. the plan: ruby for "scripting" tasks and nim for applications and larger projects.


i finally dove into "apache and the mystery of the fully qualified domain name". the following article started as an answer on stack overflow, but morphed into something else as i learned more:




apache and fully qualified domain names




i’ve been using slackware linux as my desktop os exclusively for over half a year and loving it. one of my favorite recent discoveries has been the dynamic window manager dwm. it’s actually quite intuitive to use, but learning it from the man page was a bit of a hurdle.  so i’ve made this visual guide for it:




dave’s visual guide to dwm




after two years, my mithril tutorial has been rewritten and i’ve added a part 2!




dave’s guide to mithril part 1: a tutorial from the mines of moria


dave’s guide to mithril part 2: how i use mithril




the mithril articles required the use of a new utility for displaying the source of the examples from <script> tags, so galadriel’s mirror was born.




example of galadriel (updated 2023 to version 2)




this website finally got an update. i’m now generating all new content (and this page) with my txt-to-html converter called bride of text. it’s written in perl 5 (perl.org).  i also use it for the notes i keep on my desktop computer.




bride of text  bitbucket.org stopped hosting mercurial repos.






2016


after threatening to do so for years, i finally ditched windows for slackware linux (slackware.com) as my main desktop os. i have learned a lot and have been living in command-line bliss ever since. lengthy article or small book tentatively titled "dave’s guide to slackware" pending (i’m in the note-gathering phase).


i wrote a prototype static website generator called notegoat in php.  i then wrote its successor, bride of text in the nim language (nim-lang.org).  finally, i wrote a new bride of text in perl in 2017 (see above).




notegoat  bitbucket.org stopped hosting mercurial repos.






2015


i got into rest (wikipedia.org) in a big way and ended up creating a pair of projects for the server and client side of a browseable api using json as a hypermedium for hateoas (wikipedia.org).




hm-json browser (client) (github.com)


hummingjay (server) (github.com)




i also tried out a bunch of personal wikis including pmwiki (pmwiki.org), which i used for at least six months.  eventually, i wrote my own, called krumpli before finally coming back to my senses and rediscovering my true love - plaintext!




krumpli  bitbucket.org stopped hosting mercurial repos.




surveyed quite a few different javascript frameworks. settled on mithril. wrote an article with tons of working examples called dave’s guide to mithril (updated in 2017 - see above).




2014


i wrote my third or fourth adventure game builder in javascript called hoot (it’s probably my tenth total text-based adventure game building tool).  i’m working on something better, but since that’s not done, check out hoot!




hoot  bitbucket.org stopped hosting mercurial repos.






2012


i wrote some fairly popular articles on circular slide rule watches, mercurial source control, and the sumproduct function in ms excel.




circular slide rule watch tutorial


tortoisehg and mercurial’s named branches


tricking sumproduct in ms excel




i continued to learn new programming languages (scheme comes to mind in particular), but did not create any abitious projects with them.


created the fancy friends web comic. i didn’t yet have the stamina to keep up the weekly schedule and so i never gave it a chance to really go anywhere:




fancy friends






2011


the site got a much-needed re-write to a php templating system called "darts" (from its predecessor "dots" - both names stood for "dave’s something something template system").  darts was unique in that the template itself was an executable script that would transpile using the system (first checking for a more recent cached copy) into the final page.  as i write this in 2017, some of the pages on this site are still running darts. (update: 2020 - that is no longer true! i’ve gone full static html generation.)


it is around this time that most of my php and javascript-based web tools came to be:




compound interest calculator


loan payoff calculator


gear/tire ratio calculator


dave’s fat loss calculator (still my most popular page, by hits!)


sha-1 hash maker


source code columnizer


icalendar file decoder/viewer


utf-8 to 4-digit escape sequence converter


find-a-word puzzle helper


l33t-speak translator - are you l33t enough!?




and also some web-based programs to amuse:




count down to an apocalyptic event in the style of tv’s millenium (edit the url to make your own!)


booze slogans






2010


after i used digital images to document repairing a yashica tlr camera shutter (so i could put it back together!), i decided to turn them into a "how-to" guide. to my surprise, it quickly became the most popular thing i’d ever posted on the website.




repairing yashica tlr copal shutters






2008


i learned c++ (initially from stroustrup’s tome (openlibrary.org) and branching out from there).  but i didn’t do much of anything with it.  looking back, it is hard to say if this was a colossal waste of effort or if i learned valuable things from it.


at this point, ratfactor.com and all of its contents had been completely rewritten at least once every 1.5 years since its inception.  web technology had been moving very quickly in that first decade.




2005


i released betric which was an in-browser virtual computer written in php (!) that had a working assembler, disassembler, and primitive machine code instruction set.  very educational.




a description of betric




i also created and posted designs for a trebuchet, which was somewhat popular for a while.  i know at least one group of boyscouts made a scaled up trebuchet based on my design, which was really cool.




my trebuchet






2004


though i didn’t realize it at the time, i had finally achieved one of my childhood goals by writing a primitive 2d game engine in assembly and c. my resources were the white book (openlibrary.org), lamothe’s black art (openlibrary.org) and lafore’s assembly language primer (openlibrary.org).  it was incomplete and i never actually made any games, so it was hard to see it as the victory it was.




dos gamedev






2003


around this time, i switched my web development from perl to php.  i released the first version of a php html-based text adventure game engine.  the game files had a c-like syntax and had variables, conditionals, etc.  i ended up re-writing the engine several times.




space adventure game






2001


i made some interesting toys in java - one that converted bmp images to pov-ray raytracer files (so you could render a 2d bitmap as a field of colored objects representing the pixels of the image) and one that converted jpeg images to html tables (with each cell of the table showing a colored pixel from the image) which would typically blow up netscape navigator.




2000


noodling about this this website endlessly. slogan: "it’s what the world would be like if giant rats took over."
here’s what it looked like at one point in the year 2000:





(click on the thumbnail or here for full-size screenshot and details!)




1999


i got on the java train.  i wrote a java applet (wikipedia.org) which became the main navigation for this website for about a year before i tired of it.


i started working as a "full-stack" developer before we had that term.  from flash to html to asp to sql server databases to managing an nt network configuring cisco routers and swapping power supplies. that kind of full stack.  as a developer, i got all of my clumsy, beginner foolin' around out of my system while the web itself was going through the same stages of growth.




1998


i wrote my first piece of commercial software - a cgi web application in perl with a homebrew database format!  the company i sold it to went out of business and rumor had it the owner was busted on drug charges!  i’ve been forever thankful i never had to maintain that code, but it was great to have built something complete.




1997


prior to 1997, i had been building web pages and hosting them on the space
provided by my isps (these were the wild-west dial-up days).  the prime feature
of was dave and jim’s b-movie reviews.  the movie reviews
lasted for a number of years and several hundred reviews.


i registered the ratfactor.com domain in december 1997. (keep in mind that this
was a time when i still could have chosen just about anything, even common
english words!) a domain name had to be registered through the monopoly
network solutions at a cost of $100 for two years. this was a lot of money to
me at the time.  my web host was actionweb.com (they still exist!) and i
believe i paid $25 per month for shared web hosting with something like 100mb
of storage and some amount of monthly bandwidth that would seem ludicrously
tiny today. all updates were done by ftp file transfer.


(screenshot goes here, if i can find one)


thanks for reading.






