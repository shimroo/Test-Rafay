






ctoforaday


















































ctoforaday



about me


blog











ctoforaday



about me/
blog/




































ctoforaday
occasional diary of an ex-london googler



blog







ctoforaday



about me/
blog/
















































january 21, 2017

my favorite fonts, gender typing in typography, and truthiness.

january 21, 2017/



gregory block



i am a self-confessed font nazi.  i love fonts.  andy, a good friend and housemate, recently asked for some font advice on facebook, and used the word "masculine" to describe the kind of font he was looking for.  this created... a hub-bub within some folks in the gay community, and i posted the following.




view fullsize







univers, frankfurt airport, where i first fell in love.



first, frutiger's font styling is some of the best out there, and my all time favourite sans is univers. i own this font; i spent about $1000 on it over the years for its various typefaces. it's clean, easy to read, works on everything from signage down to text, and it's gorgeous, gorgeous, gorgeous....univers® font family | linotype.comnow i prefer that by far to its other options, like helvetica, arial, and its simulacra. they just feel stranger, less formal, somehow more awkward. disney, however, is currenly moving to avenir, another frutiger font. avenir next, specifically, is slightly more informal, a little more streamlined and modernist.linotype font collections - avenir nextto get something to feel historical, and to lend the feeling of truthiness, you might opt for a historically-based serif like baskerville.for a more feminine take, and i'm using that the same way i think you are imagining in your mind (and in this case, for illustrative purposes), see mrs. eaves (the typeface).baskerville font family | linotype.comcentury schoolbook is an old hand at serifs; it's considered highly legible, even though it's a serif. (i have a high bias against serifs, i just think they're frilly and superfluous, but they do something for lots of readers.)  it lends itself a weird familiarity with the reader, mostly because they've seen it a million times before but can never put their finger on where.it's widely available. it's a bit... dare i say basic. i guess. but it's good, it's honest, and it's not times fucking new roman.century schoolbook font family | linotype.com




view fullsize







this is how ugly it used to be.



emulating an android feel requires roboto. it's a weird, weird frankenfont, with the look and feel - you might argue "the best", and you might well bloody not - of several other fonts: helvetica, myriad, universe, ff din, and ronnia. it's an interesting study into the strangeness that is google.of course, many of these original issues have been fixed, but it's roots are still deeply embedded in the patchwork that birthed it.it is, now, however, a very good font worthy of consideration.roboto | google fontsroboto is was a four-headed frankenstein | typographica




view fullsize







like many derived types, differences can be subtle.  thank you, ive, for not putting little hearts above the lower case i.



then there's our more elegant and beautiful cousin.  emulating the feel of apple devices requires san francisco these days. they're both interesting yet utterly derivative of their geneva and helvetica neue past, apple's previous system fonts. when you see them, you see lazy. unless they're trying to associate their product with apple. then you see brazen manipulation of the reader. san francisco | fonts - apple developer >




view fullsize








consolas was one of the greatest gifts to the programming community. microsoft's original is still an incredibly beautiful monospaced font - perfect for everything from terminals to the "full screen writing" or "distraction free writing" tools that i occasionally drop into.consolas | microsoft typography




view fullsize








and that's great, if you're on windows. but to be frank, there's really no need to use it anymore. inconsolata is an incredibly productive and useful replica, which has been altered over time and is now incredibly complete and beautiful. it still lacks some of consolas' polish, but it's free, and everyone has no excuse not to switch over to using it right now.inconsolata | google fontsso little known fact: fonts often have popular pairings, and it's not uncommon to do headings and subheadings in a serif and then drop to sans-serif for body text.one of my favorite pairings in the free community is merriweather with open sans; the former is a good, solid, free serif, and the latter is a nice, open-body sans that's round and full-bodied.merriweather | google fontsopen sans | google fonts




view fullsize







because nobody gives a fuck about impact.  really.



sometimes you want a display font - something for logos and punchy intros. something that isn't impact, because you shouldn't ever use impact. because it's so overused it doesn't have any anymore.for the rest of us, there's hudson ny.hudson ny | myfonts




view fullsize







you can almost see the 80's synthesizer blinking.



sometimes you need a human touch in fonts. hand-drawn fonts can be everything from sketchy to industrial, and there's more than a few drafter-hand letters.me, i'm a child of the 80's. every time i see imogen agnes i want to dress up in a miami vice salmon jacket and throw money at hookers.imogen agnes | creativemarket.com




view fullsize







i don't always use handwritten fonts, but when i do i use might could pencil.



now, if you think you need comic sans, you don't. you need might could pencil. proof that you can write like a cynical bitch and still look at the world with childlike wonder while you do it.might could pencil | creativemarket.com




view fullsize







chronicle.  your basic mid-newspaper glossy insert font.



for magazine style layouts, sometimes you want something that just kind of bleeds elegant fashion. personally, i'm a fan of chronicle display, and it's close cousin, chronicle text. the latter i almost never use for anything, because, you know, i hate serifs, but the former has a place in any designer's book.chronicle display fonts | hoefler & co.chronicle text fonts | hoefler & co.




view fullsize







mercury and esquire: making news sexy since 1996.



sometimes you need something less newsy, but still serif'd, stylish yet bold. mercury was designed for esquire magazine, and it's the heart of their signature look - you see it instantly when you know, but it's subtly there influencing the mind of the reader when you don't; you've seen it a million times on the cover, and somewhere deep in your soul, you make the connection. because that's what good fonts do.mercury display fonts | hoefler & co.




view fullsize








somewhere between the gothic fonts of old, like baskerville and its ilk, and the postmodern "humanist" fonts of frutiger that just scream airport signage at you - because, yes, that's probably where you've seen it before - is whitney.  this one's designed for new york's whitney museum.whitney fonts | hoefler & co.of course, i suppose i should wade into the "gender typing" war. however you feel about the subject of gender typing, the goal of a designer is to evoke a sensation within the masses, to communicate. you do so using stereotypes; idioms and identifiable thought patterns you know exist in the mind of the reader.it seems appropriate, on the day that trump becomes present, to remind readers that we are ingrained with idiotic, pointless, stupid, foolish, and downright wrong stereotypes from birth. all the fucking time.your job, as a designer, is to pull every lever, to push every button, to silently manipulate the image you're conveying through both liminal and subliminal to convey your message. this isn't just about what you write, or the images you use, but the shapes, the lines, the foundational design elements, the design language of the piece. design requires a deep understanding of the psyche of the individual you're designing for. so describing things as "masculine" or "feminine" is as real as the stereotype that exists in the mind of the reader - and believe you me, most people have that stereotype so well ingrained that you can use it.leveraging stereotypes in design: masculine vs. feminine typography | designshack.netlast, a reminder. yes, i worked in display advertising for years and years. i've always been a fan of the business - saatchi and saatchi and tomato are probably my favorite design houses.design, especially within advertising, is often about communicating using every possible element - constructing tiny universes where every single visible element is there to deliver and reinforce a message and identify with a target audience.but that's design's goal - to build things that connect with humans, to build associations. it's the reason people care about their typefaces; they're literally part of the identity of the brand.apple is san francisco. android is roboto. they're not just typefaces, they're full-blown wars over what makes something readable, about what humans like to see, about whether people are more likely to trust what you say when you use one font over another.for one of the world's most fascinating experiments on this, read the baskerville experiment.the baskerville experiment: font and its influence on our perception of truth | marketingexperiments.comand with that, i conclude. thank you, dear reader.  ;)





january 21, 2017/



gregory block/

comment
fonts, typography, design, marketing, experimentation, gender, stereotypes








gregory block





 








may 26, 2015

modelling the bodybuilding process

may 26, 2015/



gregory block



one of the biggest challenges in starting the process of bodybuilding is looking in the mirror every day. you see the person you are in the mirror, weighed by the baggage of the person you've been seeing for years - not the person you're intending to become.visualisation is key to motivation.to help with that, i've been working on some... projections of the effects of my workouts, plotting ahead towards the 9/1 deadline i've set for myself for burning man 2015.read more




may 26, 2015/



gregory block/

1 comment
forecasting, r, cran, glm










 








june 02, 2014

improving the model of base card value

june 02, 2014/



gregory block



so while the previous model had a good fit, we can do better.
first, it's worth noting that we were training only off of creatures; weapons with no text were not modelled, and we were modelling those after the creatures.
by adding a categorical value for the card type, we can include both sets of data in the model, and provide a better prediction for both creatures and weapons.
lastly, we add something to the model to account for card balance, penalizing cards that have are "lopsided" towards attack or health.









predicted vs actual for fitted values.  remember that horizontal values (actual) are quantized integers; vertical values (predicted cost) are not.







view fullsize







an updated poisson(link="identity") model, including the card type as a categorical (factor) attribute of the model.




deviance residuals: 
     min        1q    median        3q       max  
-0.80723  -0.05861   0.03219   0.11557   0.88626  

coefficients:
                                              estimate std. error z value pr(>|z|)
(intercept)                                    0.05952    0.45112   0.132    0.895
attack                                         0.06746    1.17126   0.058    0.954
health                                         0.81846    1.14619   0.714    0.475
sqrt(abs(attack - health))                    -0.29185    0.98007  -0.298    0.766
cardtype_q2                                   -2.39374    3.99784  -0.599    0.549
attack:sqrt(abs(attack - health))              0.25817    0.53455   0.483    0.629
health:sqrt(abs(attack - health))             -0.18654    0.64174  -0.291    0.771
attack:cardtype_q2                             0.07223    2.55269   0.028    0.977
health:cardtype_q2                             0.98153    2.49477   0.393    0.694
sqrt(abs(attack - health)):cardtype_q2         0.73281    2.73863   0.268    0.789
attack:sqrt(abs(attack - health)):cardtype_q2  0.46050    1.66056   0.277    0.782
health:sqrt(abs(attack - health)):cardtype_q2 -0.67290    1.20226  -0.560    0.576

(dispersion parameter for poisson family taken to be 1)

    null deviance: 59.0578  on 45  degrees of freedom
residual deviance:  3.7054  on 34  degrees of freedom
aic: 148.7

number of fisher scoring iterations: 6

...and for a preview of just how much card mechanics beyond the mana/attack/health relationship affect the true card cost, here's a plot of the predicted base vs actual for all minions and weapons.




view fullsize







predicted "base value" vs the actual value, highlighting the effects of other card mechanics on the true cost of a card.








june 02, 2014/



gregory block/

comment








gregory block





 








may 28, 2014

base card value:  gaussian vs poisson

may 28, 2014/



gregory block



all of these mathematical endeavours begin with the presumption that blizzard has a secret formula it uses to compute the amount of mana a card ought to cost. the value on the card will be different on the card for one of three reasons - the influence of mechanics, the effects of rounding (because a card costs 1 or 2 mana, not 1.5), and tweaking based on how it plays (variance introduced through human evaluation).
what we're ultimatley trying to build (for the base card value) is a model of the basic relationships between the values on the card (attack, health, and mana), and these other effects, to 'reverse-engineer' the basic formula.
a standard lm model uses a family of functions for analyzing the variance of a dataset based on the assumption that there's a gaussian distribution in your data, and is primarily concerned with producing a binary predictor for those values.
as always, model fitting is part art, part science, and part throwing shit at the wall to see what works.  or, it is when i do it, at any rate.
so.
given our belief that there's a direct, additive relationship between the base card value and the attack/defense values on the card, in theory, a glm on a poisson family should get you a better fit than the gaussian; it better represents the expected behaviour of a count variable.  but is it true?
first, the original, gaussian lm fit from last time.
  call: lm(formula = mana ~ attack + health, data = dataset, subset = cardtype == 1 & cardtext == "" & mana > 0)

  residuals: min 1q median 3q max -1.9940 -0.2844 0.1968 0.2218 0.7611 

  coefficients: estimate std. error t value pr(>|t|)   
  (intercept) -0.16376 0.14999 -1.092 0.283   
  attack 0.50626 0.06172 8.202 2.28e-09 _*_

  ## health 0.43566 0.06107 7.134 4.27e-08 _*_

  signif. codes: 0 ‘**_’ 0.001 ‘_**_’ 0.01 ‘_’ 0.05 ‘.’ 0.1 ‘ ’ 1

  residual standard error: 0.4999 on 32 degrees of freedom multiple r-squared: 0.9359, adjusted r-squared: 0.9319 f-statistic: 233.6 on 2 and 32 df, p-value: < 2.2e-16





view fullsize







the autoplot for lm(formula = mana ~ attack + health), showing a fit using the gaussian family.



now let's change tack.
if we presume that our outcome value is "count"-like - additive in nature from the base values on the card - we can switch to the generalized linear model, and switch to a poisson distribution - with intriguing results.
glm(formula = mana ~ attack + health, family = family, data = dataset, subset = cardtype == 1 & cardtext == "" & mana > 0)

deviance residuals: 
    min       1q   median       3q      max  
-1.0093  -0.2435  -0.1382   0.2194   0.9077  

coefficients:
            estimate std. error z value pr(>|z|)  
(intercept) -0.17849    0.23141  -0.771   0.4405  
attack       0.14891    0.06234   2.389   0.0169 *
health       0.16466    0.06622   2.487   0.0129 *
---
signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(dispersion parameter for poisson family taken to be 1)

    null deviance: 44.9140  on 34  degrees of freedom
residual deviance:  4.4248  on 32  degrees of freedom
aic: 101.1

number of fisher scoring iterations: 4










the autoplot for lm(formula = mana ~ attack + health, family=poisson), showing a fit using the poisson family.



note the differences in the two sets of graphs:

residuals are healthier.  the residuals on the poisson distribution have better deviations; lm range was -1.9940 to 0.7611 (~2.75); our poisson glm is -1.0093 to 0.9077 (~1.9).
residual qq is better.  the two graphs are day and night; you now see a nice, clean, quantized q-q for the residuals, showing the stair-stepping you'd expect to see when you know that whatever magic formula exists has the effects of rounding (because mana is an integer) applied.
cook's distance improved.  we go from having some pretty strange outliers to being within 0.06 on all modelled values.

scale-location and residuals vs leverage also see huge improvements over their normal counterpart.
in short, the poisson family appears to do a much better job of estimating the base value of the card than the normal family.





may 28, 2014/



gregory block/

comment








gregory block





 








may 11, 2014

pmana and base card value

may 11, 2014/



gregory block



so, once you've scrubbed out zero-mana cards from scoring (which are a problem disconnected from value - it costs you in the deck build, but the card in isolation is always a pretty good deal), you clean up a few of the outliers and end up with a pretty solid qqplot.









qq plot of predicted vs. actual, monsters > 0 mana with no additional mechanics.












qq plot of predicted vs. actual, for *all* monsters and weapons (including those with mechanics)



our goal in computing a base card value is to look purely at the numbers on the card, without considering the effects of the card mechanics, the rule violations that appear on the card.  you do this for a few reasons:

many mechanical effects have dependencies that are situational or may just not go off the way you hope they would when you built the deck.
some cards have a "silence" mechanic that wipe the card text, leaving you with just the base minion.
dependencies on combos and card synergies requires careful deck engineering.

most of your deck should be stable, dependable, and work towards a single goal; every card in your deck should help you reach that goal.  like building your first boat, or house, the temptation is to throw every cool thing you ever saw into a deck; what usually happens next is a catastrophic chain of losses.
what makes building a valuation like this interesting is the stuff at either end, the outliers on the outskirts of value town.  i'm also pleasantly surprised to find a fairly normal distribution.
the outliers are more-or-less who you'd expect them to be.
at the bottom of the value pile is the molten giant, at a mana cost of 20 for an 8/8 creature that's really only worth 7-8 mana.  it's all in the rule violation of the card text:  costs (1) less for each damage your hero has taken.
at the top of the heap is mukla's big brother... a massive 10/10 creature that costs 6 mana but should cost 9.  again, the card text says it all:  so strong! and only 6 mana?!
two more cards without card text do well, here:

emerald drake, costing 4 for a 7/6 creature, is well known to be great value and at a 92/100 rating for value is a great choice.
blood fury is a great value at 3 mana for a 3/8 card.

its brethren above 90% are all either great value or have debilitating problems with their additional mechanics.

ancient watcher at 2 mana for a 4/5 looks good until you see that its big restriction is that it can't attack.
injured blademaster has a debilitating battlecry that deals 4 damage to himself, a 4/7 creature that becomes a 4/3 when you play him.
earth's elemental is great value at 5 for a 7/8, but has an overload: (3) that takes out three of your mana for a whole turn.

millhouse manastorm and flame imp are right up there with ancient watcher , but again, those debilitating mechanical violations come in to destroy their utility.
even the oasis snapjaw and chillwind yeti appear in the correct order.  (yeti > snapjaw, in case you didn't know.)
a cursory review of cards shows a pretty good match for general consensus on perceived value, so i'm going to roll with this for a v1.




view fullsize







histogram of card$basescore generated from linear regression



note that it's hard to read too much from the distribution here; this is data that came out of the model, which iteself presumes a normal distribution of the source data.  i'd have to switch to a glm or bayesian model to avoid making that assumption about the source data...
which is something i'll look at in future passes.  for now, i'm comfortable that the fit passes basic sniff tests.





may 11, 2014/



gregory block/

comment








gregory block





 








may 10, 2014

hearthstone: mana cost

may 10, 2014/



gregory block



when evaluating the base cost of a card, you might be tempted to say that most of the cost lives in the base attributes; so how would you evaluate that statement for truthiness?
looking at a linear regression fit from all minions with an expressed cost >0:




view fullsize







linear regression model of all minion cards with mana cost > 0



first, just look at the quantization in the residuals-vs-fitted. pretty, isn't it? that suggests that the mechanics associated with these cards have clear, distinguishable values; this is blizzard's own statisticians at work.
next is the fit to a normal distribution; not bad, and as you'd expect, the outliers are the ones whose mechanics strongly influence mana cost (in either direction).
residuals:
    min      1q  median      3q     max 
-4.7648 -0.5829 -0.1133  0.4963 11.3935 

coefficients:
            estimate std. error t value pr(>|t|)    
(intercept) -0.02670    0.14274  -0.187    0.852    
attack       0.54873    0.04468  12.282   < 2e-16 ***
health       0.53042    0.04092  12.962   < 2e-16 ***
---
signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

residual standard error: 1.21 on 270 degrees of freedom
multiple r-squared:  0.7617,    adjusted r-squared:   0.76 
f-statistic: 431.6 on 2 and 270 df,  p-value: < 2.2e-16

so a basic lm fit is surprisingly expressive - moreso by far than i was expecting, and it matches trump's views on base cost of card being a very important factor. in fact, even without filtering out all of the cards that represent more unusual cases, it covers more than 76% of the variance in the dataset.
we can do better, though - if we're looking to fit a model for base cost, let's restrict the model to those mechanics that don't actually express any other mechanics.
in other words, let's go build a linear model that fits only the relationship between mana, attack, and health for minions with no other mechanics.




view fullsize







linear regression model of all minion cards with mana cost > 0 and no other mechanics.



the resulting fit is better, too - we're at 93% of the variance of the data covered by the model.
residuals:
    min      1q  median      3q     max 
-1.9916 -0.2755  0.2203  0.2287  0.7730 

coefficients:
            estimate std. error t value pr(>|t|)    
(intercept) -0.17189    0.13566  -1.267    0.213    
attack       0.50416    0.05960   8.460 3.56e-10 ***
health       0.43905    0.05918   7.419 7.90e-09 ***
---
signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

residual standard error: 0.4879 on 37 degrees of freedom
multiple r-squared:  0.9338,    adjusted r-squared:  0.9302 
f-statistic: 261.1 on 2 and 37 df,  p-value: < 2.2e-16

of course, the problem with this is that we're now restricted to 37 degrees of freedom, and there's still quite a bit of scatter between the fit and residuals.
in fact, if you take this model, and use it to predict mana cost for all cards in the deck if the card had no other mechanics than its base value, you get something like this:




view fullsize








it bodes well for my tuning of cost evaluation models for deckalytics.





may 10, 2014/



gregory block/

comment








gregory block





 








march 15, 2014

weathrman is no more...

march 15, 2014/



gregory block




weathrman was built around a simple idea; search flickr for a photograph taken near you, showing weather conditions and time of day roughly similar to your current location's weather conditions and time of day.
for the most part, it worked surprisingly well, given that i had limited api capabilities from flickr, time-of-day is badly managed in images, most of flickr's images weren't geocoded well, the api is horribly slow, and althoiugh we start searching hyperlocal and step upwards until we find something, each of those queries is run sequentially (due to both limited number of queries per day to flickr and the cost of appengine to me).




view fullsize








it's been many years since i seriously looked at the codebase; the app still worked, but the quality of the images it pulled had steadily decreased, people aren't really using flickr like they used to.the net effect is that the app was old (written for froyo, and last updated in 2011), had bad image choices due to limited api control... and for a while, was actually costing me money to run, as it had enough users to hit appengine's limit on free cpu time.but no longer; it's fallen out of use, gets few requests.  the app has bitrotted, people have moved on from being endlessly fascinated with live wallpapers, and there's no point leaving it up.so down it comes, three years after my last update.if it brought you joy, thank you; if it brought you tears, i apologize.





march 15, 2014/



gregory block/

1 comment
weathrman








gregory block





 








january 03, 2014

it's alive!!!!

january 03, 2014/


noe valley/
gregory block



adsense dashboard 3.1 is alive!!!
for those who've been wondering, life's been a little busy lately.  since moving to mountain view, i've taken over the role of tl lead and manager on the advertiser's side frontend of our display business at google, what we call the 'content adwords frontend' in google.
that's left me with precious little time; i first knew about 1.2 six months or more before it got released, and knew i'd have to migrate the dashboard to the api - but i ended up moving to mountain view to take on this role before i had the chance to do so.
now that my other major project, search and display select is launched, i have a moment to take a breath and fix the dashboard.
now, keep in mind i still want everyone to move over to the official app - but it's also true that it's 4.0+ only, and i supported folks on froyo.
froyo is no more.  if you're still on froyo, go buy a phone, the os is much nicer now and you'll be happy you did.
so the adsense dashboard is gingerbread or later now.  i've gone and changed a few things to make it easier to maintain and take some of the pain away - including to moving to play services for authentication.  (auth used to be particularly ugly under the hood.)




view fullsize







new navigation hierarchy




local timezone everywhere. everyone but google thinks in their local timezone.  so timezone reporting isn't optional; the app works in the timezone you gave adsense.
a new widget that supports resizing and lockscreen use.
goodbye, viewpager. it was broken anyways, and we now have way too many reports to just blindly page through.
hello, navigation the new design paradigm on android is an actionbar button linked to a navigation drawer; now that we have navigation, we've added more reporting.
new reports ad unit and site reporting have been added.
more data a full set of metrics on all of the reports we show.
pull to refresh because i was wrong, nick.
new icons while playing with the navigation drawer i found we needed some kind of visual indicator.  i wanted scaleable icons that worked at all dpis, but was way too lazy to actually go and make icons of all of those sizes.  enter fontawesome, a font with a host of icons of just the right style and use case; that, plus a customised textview that supports specifying a font, and a bit of aggressive caching of typography, and we've got some icons in the app now.
use of typography i switched everything over to the fonts that are used in jellybean and kitkat, roboto.  this is temporary, until i can find (or get around to buying for app embedding) something like trafalgar and requiem
api 1.4 introduced a change i've been begging for since the first version of the api; at least some of this happened because they're now seeing these problems for themselves as users of the api.
rewrite of networking i rewrote the networking to make a single batch request at the same time i moved to play services for authentication.  the refactor cut the amount of code i had in the app by more than half.
use of play services sdk play services adds a lot of critical support for doing auth properly across a wider range of devices.

and, of course, moving off of the v1.2 api, which is what broke the app for all of october and november.
i did this in two stages - a 3.0 release in november, and a 3.1 release just a few days ago to make use of some of the earlier cleanup.
along the way, i cleaned up a bunch of code, imported the 1.4 libraries, followed the daisy chain of required updates, moved to android studio, deleted all of that and switched to the maven repository, fixed all the maven conflicts, updated to later versions of support libraries, rewrote a bunch of stuff that the support library changes broke, etc.  this has been, undoubtedly, a massive yak shaving exercise; but it's better off now.
we'll see where things go next; as always, send me your feature requests, complaints, and general chatter to the support address.





january 03, 2014/


noe valley/
gregory block/

1 comment
/source
adsense, adsense dashboard, android, api








gregory block





 







next








 




about me/
blog/



ctoforaday
rants, ragings, and the random apps of an ex-london googler.








 
































 
copyright © 2010-2013, gregory block.  all rights reserved.


