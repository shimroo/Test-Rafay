





abram hindle | abram hindle's homepage






home
contact
papers
teaching
old homepage
subscribe



research promotion site of abram hindle

abram is a professor at the university of alberta, in edmonton, alberta, canada within the department of computing sciences. he researches software engineering, mining software repositories, software process recovery, the intersection between software engineering and computer music, and green mining (the study of software change versus software energy consumption and software power consumption).

a general overview of my publications: dblp google scholar
current version of my curriculum vitae
abram’s blog
listing and downloads of all of my publications

prospective graduate students please read this page before contacting me: guide to prospective students
what can abram offer you?

methods, technology and tools for characterizing past developer behaviour in a software project, based on information stored in source control repositories.
methodology and tools to relate software evolution and software power consumption / software energy use / software power use: green mining
methods and technologies for building and using computer music systems. the cross-over between software engineering and computer music: softwareengineeringandcomputermusic

what questions does abram seek to help answer?

green mining energy aware mining of software. software energy consumption studies across versions. correlations with performance and other metrics.
distributing web music interfaces
composing distributed web instruments in the cloud
security concerns of computer music instruments
electronically excited didgeridoo
an empirical study of end-user programmers in the computer music community
guitar transcription

graduate students:

current graduate students:

hareem sahar (phd)
amir salimi (phd)
weijie sun (phd)
kalvin eng (phd)
samuel iwuchukwu (msc)
anisha islam (msc)


past students:

abdul ali bagnash (phd)
amir salimi
alexander wong (msc)
hazel campbell (phd)
yourui guo (msc)
rameel sethi (msc)
candy pang (phd)
shaiful chowdhury (phd)
stephen romansky (msc)
eddie antonio santos (msc)
gregory burlet (msc thesis)
karan aggarwal (msc thesis)
chenlei zhang (msc thesis)
anahita alipour (msc thesis)
varun sapra (msc course based)



teaching:

courses:

cmput 201 programming irl
cmpt 301 intro to se
cmput 410 webservices winter 2014, winter 2015
cmput 404 webservices
cmput 664 topics in mining software repositories, processes, and artifacts winter 2013, winter 2014
cmput 663 topics in mining software repositories, processes, and artifacts winter 2013, winter 2014
directed studies in computer music (audio and deep learning), green mining, and mining software repositories




awards:

2020 telus world of science fellowship $2500
2017 cs-can/info-can outstanding young computer science researcher prize
2017 mining software repositories early career achievement award: “to recognize the rigor, fearlessness, and breadth of his msr-related research, and for establishing a new area of research related to green-mining.”
2017 – 2022 nserc discovery grant $108000
2017 nserc engage with black duck software $25000
2016 sigsoft acm distinguished paper award – icse 2016
2016 kias team grant with m. friskopf et al. $7500
2016 best msr mining challenge paper – msr 2016
2015 mitacs accelerate cluster with bioware $106666
2015 best msr mining challenge paper – msr 2015
2015 the interdepartmental science students’ society: excellence in undergraduate teaching award
2014 nserc engage with bioware? $22000
2014 faculty of science: student’s honor roll
2013 microsoft software engineering innovation foundation award $25000

http://research.microsoft.com/en-us/collaboration/focus/cs/seif-rfp.aspx


2012 – 2017 nserc discovery grant $95000
2012 msr best paper award – msr 2012
2012 best msr mining challenge paper – msr 2012
2010 best presentation award - mining software archives 2010
2015 isss teaching award
nserc discovery grant
msr 2012 best paper award


potentially fun things:

my github repos
my bitbucket repos
my musical endeavour: skruntskrunt
my youtube channel
former labs

contact
email: web@softwareprocess.es
abram hindle
department of computing science
447 athabasca hall
university of alberta
prospective graduate students
prospective graduate students please read this page before contacting me: guide to prospective students
posts


2024/06/10
irjit: a simple, online, information retrieval approach for just-in-time software defect prediction


2024/02/19
patterns of multi-container composition for service orchestration with docker compose


2024/02/04
federated learning and differential privacy techniques on multi-hospital population-scale electrocardiogram data


2024/01/12
opening the valve on pure-data: usage patterns and programming practices of a data-flow based visual programming language


2024/01/01
development and validation of machine learning algorithms based on electrocardiograms for cardiovascular diagnoses at the population level


2023/11/01
supervised electrocardiogram (ecg) features outperform knowledge-based and unsupervised features in individualized survival prediction


2023/09/24
generative data by β-variational autoencoders help build stronger classifiers: ecg use case


2023/09/01
dovecot and thunderbird, bad certificate ssl alert number 42 errors


2023/08/23
predicting individual survival distributions using ecg: a deep learning approach utilizing features extracted by a learned diagnostic model


2023/08/10
identifying defect-inducing changes in visual code


2023/08/10
predicting defective visual code changes in a multi-language aaa video game project


2023/03/07
an empirical study to investigate collaboration among developers in open source software (oss)


2023/03/07
energy consumption estimation of api-usage in smartphone apps via static analysis


2023/03/07
evolution of the practice of software testing in java projects


2023/01/03
cmput404: webservices


2023/01/03
cmput301: intro to software engineering


2023/01/01
towards artificial intelligence-based learning health system for population-level mortality prediction using electrocardiograms


2022/11/02
analyzing techniques for duplicate question detection on q&a websites for game developers


2022/07/18
cmput660: machine learning applied: software engineering, software analtyics, and software energy consumption (2022)


2022/01/01
improving ecg-based covid-19 diagnosis and mortality predictions using pre-pandemic medical records at population-scale


2021/12/30
a black box technique to reduce energy consumption of android apps


2021/11/30
dorabella cipher as musical inspiration


2021/10/26
ecg for high-throughput screening of multiple diseases: proof-of-concept using multi-diagnosis deep learning from population-based datasets


2021/06/15
energy efficient guidelines for ios core location framework


2021/04/23
experimental analysis of the dorabella cipher with statistical language models


2021/04/05
what causes wrong sentiment classifications of game reviews?


2021/02/22
pysstubs: characterizing single-statement bugs in popular open-source python projects


2021/02/22
revisiting dockerfiles in open source software over time


2021/01/29
multilabel 12-lead electrocardiogram classification using beat to sequence autoencoders


2020/10/29
how are issue reports discussed in gitter chat rooms?


2020/10/15
borderlands 3 and confidence intervals of loot drop rates


2020/10/01
multilabel 12-lead electrocardiogram classification using gradient boosting tree ensemble


2020/09/17
make your own audience: virtual listeners can filter generated drum programs


2020/09/10
essence of chaos: experiments and simulations with marbles and tubes


2020/08/07
on the time-based conclusion stability of cross-project defect prediction models


2020/06/10
statistics and probability for randomized games (loot shooters, roguelites, roguelikes, etc.)


2020/05/26
cmput201: practical programming methodology / programming irl / the c course / you didn’t teach that why are you testing us on it!


2020/01/15
understanding devops education with grounded theory


2019/07/13
syntax and stack overflow: a methodology for extracting a corpus of syntax errors and fixes


2019/07/13
syntax and stack overflow: {a} methodology for extracting a corpus of syntax errors and fixes


2019/03/01
what do developers know about machine learning: a study of ml discussions on stackoverflow


2019/02/27
complexity: let’s not make this complicated


2018/12/01
greenbundle: an empirical study on the energy impact of bundled processing


2018/08/15
automatic topic classification of test cases using text mining at an android smartphone vendor


2018/07/20
preventing duplicate bug reports by continuously querying bug reports


2018/07/13
how does docker affect energy consumption? evaluating workloads in and out of docker containers


2018/07/07
if you bill it, they will pay: energy consumption in the cloud will be irrelevant until directly billed for


2018/06/20
an exploratory study on assessing the energy impact of logging on android applications


2018/06/20
greenscaler: training software energy models with automatic test generation


2018/05/17
an app performance optimization advisor for mobile device app marketplaces


2018/05/10
training deep convolutional networks with unlimited synthesis of musical examples for multiple instrument recognition


2018/05/10
what can android mobile app developers do about the energy consumption of machine learning?


2017/12/18
syntax and sensibility: using language models to detect and correct syntax errors


2017/11/01
analyzing the effects of test driven development in github


2017/07/29
continuous maintenance


2017/06/12
deep green: an ensemble of machine learning methods predicting mobile energy consumption


2017/04/04
performance with an electronically excited didgeridoo


2017/03/01
isolated guitar transcription using a deep belief network


2017/01/01
expert commentary: the potential synthesizer in your pocket


2016/08/01
detecting duplicate bug reports with software engineering domain knowledge


2016/06/10
visualizing project evolution through abstract syntax tree analysis


2016/05/14
the unreasonable effectiveness of traditional information retrieval in crash report deduplication


2016/04/04
hadoop energy consumption reduction with hybrid hdfs


2016/03/28
characterizing energy-aware software projects: are they different?


2016/03/28
hacking nimes


2016/03/28
judging a commit by its cover: correlating commit message entropy with build status on travis-ci


2016/03/02
detecting duplicate bug reports with software engineering domain knowledge


2016/02/29
greenoracle: estimating software energy consumption with energy measurement corpora


2016/01/01
leaders of tomorrow on the future of software engineering: a roundtable


2016/01/01
the perils of energy mining: measure a bunch, compare just once


2015/12/22
green software engineering: the curse of methodology


2015/12/18
crowdsourced bug triaging: leveraging q&a platforms for bug assignment


2015/12/17
client-side energy efficiency of http/2 for web and mobile app developers


2015/12/15
energy profiles of java collections classes


2015/09/29
greenadvisor: a tool for analyzing the impact of software evolution on energy consumption


2015/08/06
a system-call based model of software energy consumption without hardware instrumentation


2015/08/06
hadoop branching: architectural impacts on energy and performance


2015/07/24
crowdsourced bug triaging


2015/06/28
a contextual approach towards more accurate duplicate bug report detection and ranking


2015/05/31
orchestrating your cloud orchestra


2015/05/18
on the naturalness of software


2015/05/16
an empirical study of end-user programmers in the computer music community


2015/05/16
mining stackoverflow to filter out off-topic irc discussion


2015/01/01
latent dirichlet allocation: extracting topics from software engineering data


2015/01/01
what do programmers know about the energy consumption of software?


2014/11/03
involvement, contribution and influence in github and stack overflow


2014/11/03
on improving green mining for energy-aware software analysis


2014/11/03
the power of system call traces: predicting the software energy consumption impact of changes


2014/06/01
green mining: energy consumption of advertisement blocking methods


2014/05/31
a green miner’s dataset: mining the impact of software change on energy consumption


2014/05/31
co-evolution of project documentation and popularity within github


2014/05/31
greenminer: a hardware based mining software repositories software energy consumption framework


2014/05/08
cloudorch: a portable soundcard in the cloud


2014/04/08
syntax errors just aren’t natural: improving error reporting with language models


2014/03/23
the impact of user choice on energy consumption


2014/01/01
do topics make sense to managers and developers?


2013/11/18
a multidimensional empirical study on refactoring


2013/09/22
on the personality traits of stackoverflow users


2013/04/01
swarmed: captive portals, mobile devices, and audience participation in multi-user music performance


2013/03/16
deficient documentation detection: a methodology to locate deficient project documentation using topic analysis


2013/03/15
a contextual approach towards more accurate duplicate bug report detection


2013/01/01
automated topic naming supporting cross-project analysis of software maintenance activities


2013/01/01
green mining: a methodology of relating software change and configuration to power consumption


2013/01/01
roundtable: what’s next in software analytics


2012/08/14
understanding android fragmentation with topic analysis of vendor-specific bugs


2012/06/20
relating requirements to implementation via topic analysis: do topics extracted from requirements make sense to managers and developers?


2012/06/02
the build dependency perspective of android’s concrete architecture


2012/05/23
software bertillonage determining the provenance of software development artifacts


2012/03/24
cohesive and isolated development with branches


2012/03/16
green mining: a methodology of relating software change to power consumption


2012/03/12
do the stars align? multidimensional analysis of android’s layered architecture


2012/01/27
green mining: investigating power consumption across versions


2012/01/27
on the naturalness of software


2011/10/17
got issues? do new features and code improvements affect defects?


2011/10/17
on the effectiveness of simhashing in clone detection on large scale software system


2011/09/05
bugcache for inspections : hit or miss?


2011/05/23
determining the provenance of software artifacts


2011/05/21
a simpler model of software readability


2011/05/21
automated topic naming to support cross-project analysis of software maintenance activities


2011/05/21
multifractal aspects of software development


2011/05/21
software bertillonage: finding the provenance of an entity


2010/10/13
software process recovery: recovering process from artifacts


2010/09/12
software process recovery using recovered unified process views


2010/05/02
mining challenge 2010: freebsd, gnome desktop and debian/ubuntu


2009/09/20
what’s hot and what’s not: windowing developer topic analysis


2009/05/19
automatic classification of large changes into maintenance categories


2009/05/16
mining recurrent activities: fourier analysis of change events


2009/01/01
reading beside the lines: using indentation to rank revisions by complexity


2008/10/15
reverse engineering captchas


2008/09/28
from indentation shapes to code structures


2008/06/10
reading beside the lines: indentation as a proxy for complexity metrics


2008/05/10
what do large commits tell us?: a taxonomical study of large commits


2007/10/02
release pattern discovery: a case study of database systems


2007/06/25
yarn: animating software evolution


2007/05/19
release pattern discovery via partitioning: methodology and case study


2006/01/01
visualizing the evolution of software using softchange


2005/09/19
measuring fine-grained change in software: towards modification-aware change metrics


2005/05/17
scql: a formal model and a query language for source control repositories


2004/06/20
visualizing the evolution of software using softchange






