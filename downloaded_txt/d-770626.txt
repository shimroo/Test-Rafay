jake donham


jake donhamhello! i am a computer programmer living in san francisco. i have two kids and a steady job.email: jake@donham.org | twitter: @jakedonham | github: @jakednew stuff📝 technical difficulties, blog (2021-now)mostly programming? maybe some stuff about bikes too, we'll see.💻 slate explorer, dev tool (2021)a tool to help you explore the slate rich-text editor framework and its api.💻 programmable matter, a dynamic data-driven document development environment (2019-now)a live-coding environment for making documents; an experimental tool for thought; a place to work out some ideas about "casual computing".🎥 leverage vs. autonomy in a large software system, strange loop (2018)describes strato, an internal platform-as-a-service built at twitter, and some of the technical and organizational pressures that motivated its development.a domain-specific language for microservices 🎥 talk and 📝 paper, scala symposium (2018)describes the design and implementation of a simple scala-like language used in strato (see above), with a somewhat interesting type system.stitch, a library for composing rpc services, 🎥 scala by the bay / 🎥 twitter university (2014)describes stitch, a scala library for concurrent composition similar to haxl. stitch was built at twitter, and strato (see above) is based on it. (these are the pretty much the same talk; the second one went better.)old stuff📝 a consistent semantics of self-adjusting computation, journal of functional programming (2013)a proof of correctness for an idealized version of acar's self-adjusting computation, with a twelf formalization.🔬 better ajax uis with functional reactive programming, jane st. capital and twitter (2010)overview of froc, a system for functional reactive programming in ocaml. the slides are a froc program: you can interact with ui elements, and use arrow keys to navigate.💻 froc, a library for functional reactive programming in ocaml (2008-2010)based on acar's self-adjusting computation; works with ocamljs for frp web programming. see sudoku in ocamljs, part 3: functional reactive programming for an example, and how froc works for an overview of the implementation. this probably still works in current ocaml versions, but see react or incremental for actively-maintained alternatives.📝 a natural platform for artificial intelligence, sigbovik (2010)a goof, but serious.📝 ambassador to the computers, mostly ocaml blog (2008-2011)most of this is no longer interesting even to ocaml people. but this mini-series on implementing logic programming in scala is fun (parts 1, 2, and 3); and mixing monadic and direct-style code with delimited continuations is sort of a mind-bender.📝 reading camlp4, blog series about the camlp4 preprocessor for ocaml (2008-2010)camlp4 is a cool code preprocessor with an extensible parser. i spent a bunch of time trying to figure out how it works by reading the code and experimenting, which was fun!🔬 from ocaml to javascript at skydeck, commercial users of functional programming (2008)overview of ocamljs, a javascript backend for ocaml.💻 ocamljs, a javascript backend for ocaml (2007-2010)translates ocaml's "lambda" intermediate language to javascript. it's a set of compiler patches, so will not work with current versions of ocaml; see js_of_ocaml or bucklescript for actively-maintained alternatives.🔬 fun with twelf, bay area functional programmers (2008)introduction to twelf, a dependently-typed logic programming system useful for writing proofs about programming languages.📝 compacting, composting garbage collection, sigbovik (2007)a goof.📝 combining sat methods with non-clausal decision heuristics, pdpar (2004)a good example of emery berger's "eyeball statistics" (see performance matters) although i did not know it at the time.📝 hack technology and matte-black technology in terminator 2 (1994)a badly-written college paper. but i think all the time about technology that empowers people and technology that oppresses them. see also: authoritarian and democratic technics (lewis mumford, 1964), tools for conviviality (ivan illich, 1975), and the real world of technology (ursula frankin, 1989).