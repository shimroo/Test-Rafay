
















pixelconsumption







































































pixelconsumption






























































































monday, november 17, 2008







swfutils.jar, the back bone of the new flex builder 3 skin import feature





if any of you have checked out the flex sdk source at opensource.adobe.com, you know there is a ton of code in there. the trunk is split up into sub projects which contribute to the sdk as a whole. one project that i found to be really interesting is trunk/modules/swfutils. the jar file that this project builds is used in the the flex builder 3 swf skin import feature. if you haven't seen this feature yet it lets you select a swf and it lists out the symbols in the swf available for import. so how does flex builder use this jar and how can i get it? flex builder has a new wizard the contained in this jar com.adobe.flexbuilder.importartwork_3.0.194161.jar, this has the ui that drives the import feature and creates and instance of the class flash.swf.tagdecoder. the tagdecoder class is what actually parses out the symbols in the swf file that you select while using the wizard. building the swfutils.jar is very easy but may require you to install some software. you will need java 1.5.0 and ant 1.7.0, i'm not sure if the sdk source uses an specific features of either yet since they just upgraded from java 1.4.2 and ant 1.6.2. so you may be able to get by with either of those for now. environment variables for each will need to be set if don't already have them, java_home and ant_home. now you need access to the flex sdk source tree, this page gives you details on accessing and using subversion to checkout the files. once you have the trunk checked out you can build the swfutils.jar by running this command in the main project dir that contains the build.xml and build.properties files, ant swfutils. once ant has finished running you should fine the jar here /lib/swfutils.jar.so how can i use the tagdecoder class found in swfutils.jar to list out the symbols compiled into a swf like the skin import in flex builder? first you need a swf exported for flash player 8 with some symbols exported in the library. if you have illustrator cs3 or flash cs3 you can download skinning extensions that will help you create a set of flex skins exported as a swf. the tagdecoder class take two parameters in it's constructor a java.net.url and an java.io.inputstream. once you have a new instance of the class you can call the parse method that will start the swf parsing. the parse method takes a flash.swf.taghandler instance which is sent the swf data through a bunch of public handler methods. the two handlers we are interested right now are the flash.swf.taghandler.header() and the flash.swf.taghandler.exportassets() methods. the header handler does just what it sounds like passed back the swf file header information as a flash.swf.header instance. the exportassets handler passes back a list of the exported symbols found in the swf as a flash.swf.tag.exportassets instance. the code below shows what this would look like, notice the mytaghandler extends taghandler so we can pass a reference to it's self as the parameter for the tagdecoder.parse method. then we just need to override the handler methods we want to use so we can parse the data sent to them.package;import java.io.file;import java.io.ioexception;import java.io.inputstream;import java.net.url;import flash.swf.header;import flash.swf.tagdecoder;import flash.swf.taghandler;import flash.swf.tags.exportassets;import flash.util.fileutils;public class mytaghandler extends taghandler {	public void parseswf( file f )	{		try		{			url fileurl = fileutils.tourl( f );			inputstream input = url.openstream();			tagdecoder t = new tagdecoder( input, fileurl );			t.parse(this);		}		catch ( ioexception e )		{			e.printstacktrace();		}	}		public void header( header h )	{		//data here	}	public void exportassets( exportassets tag )	{		//data here	}}there is a handler that will list out the exported symbols from a swf exported for flash player 9 but the flex builder 3 feature only supports flash 8 for now. so hopefully this has give a little peek under the flex builder 3 hood, all thanks to the open source flex sdk. there is a lot of interesting code in there have fun exploring.





posted by



sam robbins




at

12:42 pm



no comments:
  

























home




subscribe to:
posts (atom)















blog archive








        ▼ 
      



2008

(1)





        ▼ 
      



november

(1)

swfutils.jar, the back bone of the new flex builde...















my blog list











about me





sam robbins


i love code.

view my complete profile
















































awesome inc. theme. powered by blogger.
























