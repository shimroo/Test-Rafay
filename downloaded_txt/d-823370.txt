




nathan oostendorp, open source, slashdot, sourceforge, open hardware





nathan oostendorp

sight machine

ingenuitas is now sight machine, and we're now selling our eponymous software.  sight machine is built on top of simplecv and gives you the ability to inspect multiple live video streams and store and analyze the output in realtime.  if you're interested in developing a plugin, take a look at the open source client on github.


the atlantic wrote a very insightful article on us, and our makerspace/incubator maker works:  the internet and things: how manufacturing could get better with a dose of networked data



simplecv
    the first product release from sight machine is simplecv, an open source framework for creating machine vision applications.  
    it gives you a very convenient interface to cutting-edge algorithms in machine vision, and gives you an interface to a wide variety of video sources including firewire camera, webcams, security cameras, mobile phones, and the xbox kinect.
    we're looking to bridge the gap between the opencv and casual users, and give machine vision enthusiasts a robust platform for making computers see.
    

    

ingenuitas

ingenuitas is my new company with the mission of developing an ecosystem of open source hardware and software industrial controls products.  we are creating an online space for industrial engineering collaboration and prototyping ultra-low-cost solutions in machine vision, robotics, wireless sensors, and control systems.  open source software has been a tremendous catalyst for technology development on the web in the last decade, and open innovation in manufacturing will accelerate innovation in the next.
i gave a guest commentary on changing gears for how manufacturers need to start collaborating with open source.  
listen to it
we also had an article ingenuitas puts open-source software to work in manufacturing in xconomy detroit



sourceforge.net
i worked at geeknet (formerly va linux) from 2001-2010 in a variety of roles.  i started just as the company was exiting the hardware industry as sourceforge.net's sole web developer.  i took a hiatus in 2003 to work in ad operations, building the company's internal ad system, and returned in 2005 as the sf.net site architect.  in 2008 i took another break to create fossforus, a next generation oss catalog, and from 2009-2010 served as sourceforge product director.  
		


everything2.com
everything2.com was my own creation after slashdot was aquired by andover.net.   it and its sister site, perlmonks were developed in a cms i designed called the everything engine.  the everything development company ran from 1999-2001, and consisted of ryan "dembones" postma, darrick brown, tim vroom, chromatic, and robo.
		


slashdot.org
i was a co-founder of slashdot, along with rob "cmdrtaco" malda, jeff "hemos" bates, and kurt "the pope" demaagd.  i also was the "mixmaster" for the slashdot podcast geeks in space.  i mostly wrote backend code in slash, and designed "ad-fu", our open source ad server so we had enough money in the company to buy hamburger helper and bushmills.
		


arduino hacks
i'm a huge fan of the arduino platform, and in particular the minimalist really bare bones derivative.  i've built a number of devices, some of which i've published on sourceforge:
		
parking helper uses an ultrasonic rangefinder (maxbotix ez) and red/yellow/green leds to show the range of an approaching vehicle.
hudsonlamp is a quick and dirty alarm system for when hudson ci tests break.
arduino analog view is a processing sketch which shows analog inputs over time.  the arduino must be loaded with the firmata sketch.
arduino climate sensor is a simple humidity/temperature minder using the sht15 breakout and an lcd screen.
mr arduino is a light-up box for my toddler which uses arcade buttons, leds, and the sound module from a gift card.  it was my first project with arduino.




university of michigan school of information
while at sourceforge i attended the school of information at the university of michigan where in 2009 i graduated with an msi in information economics.  
		here is a sample of some of the projects i worked on:
		
three recommender approaches to interface controls reduction with paul resnick deals with how complex interfaces can be simplified using recommender algorithms.  it was published in the proceedings of 2008 acm conference on recommender systems
conversation pivots and double pivots with daniel zhou, michael hess and paul resnick.  this paper discusses a technique for using co-occurance of references in online forums to build recommendations for item databases.  we built reference implementations on drupal.org and perl monks/cpan, which gave recommendations of similar software modules.  this was published in the proceedings of the 2008 acm conference on computer human interaction.
the copied item injection attack with rahul sami discusses recommender system manipulations that are possible when users are allowed to create new items in a system. 
simforge: an agent based model of open source contribution networks is a hypothetical model of the open source ecosystem.  in the model, developers are assigned preferences for features and can chose to create or contribute to software that expresses those features.  you can play with the model online, or check out the code on sourceforge.
using networks to visualize and understand participation on sourceforge.net uses network visualizations to show how software projects are linked together.  you can probably skip the paper and just watch the movie.
using concurrent sealed bid auctions for funding open source software describes a novel application of the deb-razollini sealed bid auction-like mechanism (sbalm) (a collaborative variant of the vickrey auction) to fund open source development.  its sequel, codepatron.com: a community of open source developers and supporters fleshes out building an open source market on the patronage model.
			simrecommender is a perl framework to benchmark the effectiveness of different recommender algorithms, and in particular their reaction to theoretical attacks.  it is robust enough to handle the netflix data set.
algorithm::matchingmodel is a perl framework to execute different algorithms for two-sided matching problems and gather statistics on efficiency, clearings, and fairness.




welcome to where nate lives
every decade or so, a website update is in order.  if you were for some reason looking for old site with its charming gimp art, ramblings, word galaxys and puppet animation, have at.  the old is out, the new is in.



